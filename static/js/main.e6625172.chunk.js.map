{"version":3,"sources":["components/header/styledComponents.js","components/header/index.js","components/block/styledComponents.js","components/block/index.js","components/blockGroup/styledComponents.js","components/blockGroup/index.js","components/mainCounters/index.js","components/upgradeCard/styledComponents.js","libs/bigNumbers.js","components/upgradeCard/index.js","components/repeatedUpgradeCard/styledComponents.js","components/repeatedUpgradeCard/index.js","components/upgradeSection/index.js","libs/upgradeList.js","libs/multipliers.js","libs/rareBlockGenerator.js","libs/updateTier.js","components/main/index.js","App.js","reportWebVitals.js","index.js"],"names":["StyledHeader","styled","header","Header","StyledBlock","div","color","css","fadeOut","Block","simpleBlockClick","index","setColor","basicRegenTimer","useState","wasClicked","setWasClicked","onClick","setTimeout","Container","BlockGroup","colorList","setColorList","map","i","MainCounters","balance","StyledFontAwesomeIcon","FontAwesomeIcon","IconContainer","DescriptionContainer","UpgradeName","p","UpgradeDescription","UpgradeButtonContainer","UpgradeButton","button","isAvailable","UpgradeButtonSpan","span","formatNumbers","number","length","Math","ceil","log10","formatString","toString","substring","round","first","second","letter","UpgradeCard","title","description","price","setLatestUpgradeId","upgradeId","level","nextClickWillRandomize","icon","faCoffee","size","IconSection","IconLevel","RepeatedUpgradeCard","upgradeTier","setUpgradeTier","faAngleUp","faAngleDown","UpgradeSection","counter","upgrades","upgradeLevels","upgradePrices","isUpgradeAvailable","upgradeTiers","e","unique","id","twoClickUpgrade","UpgradeList","basePrice","updateMultipliers","simpleClickMultiplier","setSimpleClickMultiplier","passiveIncrementPerSecond","setPassiveIncrementPerSecond","setBasicRegenTimer","setUpgradeLevels","setCounter","setUpgradePrices","passiveCounter","setPassiveCounter","setNextClickWillRandomize","wasIncrementPerSecondChanged","console","log","newUpgradeLevels","newUpgradePrices","rareBlockGenerator","newColorList","floor","random","getRandomColor","updateTier","setUpgradeTiers","increment","newUpgradeTiers","Main","Array","setIsUpgradeAvailable","useEffect","interval","setInterval","clearInterval","isUpgradeAvailableBuffer","simpleClick","useCallback","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6625172.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.header`\r\n  width: 100%;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  background-color: #221c34;\r\n`;\r\n","import React from \"react\";\r\nimport { StyledHeader } from \"./styledComponents\";\r\n\r\nconst Header = () => <StyledHeader>Incremental Squares</StyledHeader>;\r\n\r\nexport default Header;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledBlock = styled.div`\r\n  height: 40px;\r\n  width: 40px;\r\n  background-color: white;\r\n  margin: 4px;\r\n\r\n  ${({ color }) =>\r\n    color &&\r\n    css`\r\n      background-color: ${color};\r\n    `}\r\n\r\n  ${({ fadeOut }) =>\r\n    fadeOut &&\r\n    css`\r\n      transition: opacity 250ms ease-out;\r\n      opacity: 0;\r\n    `}\r\n\r\n  ${({ fadeOut }) =>\r\n    !fadeOut &&\r\n    css`\r\n      transition: opacity 250ms ease-in;\r\n      opacity: 1;\r\n    `}\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { StyledBlock } from \"./styledComponents\";\r\n\r\nconst Block = ({\r\n  simpleBlockClick,\r\n  index,\r\n  color,\r\n  setColor,\r\n  basicRegenTimer\r\n}) => {\r\n  const [wasClicked, setWasClicked] = useState(false);\r\n  return (\r\n    <StyledBlock\r\n      onClick={\r\n        wasClicked\r\n          ? () => {}\r\n          : () => {\r\n              setWasClicked(true);\r\n              simpleBlockClick(index, setColor);\r\n              setTimeout(() => {\r\n                setWasClicked(false);\r\n              }, basicRegenTimer);\r\n            }\r\n      }\r\n      fadeOut={wasClicked}\r\n      color={color}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Block;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  height: 200px;\r\n  width: 200px;\r\n  margin: auto;\r\n  margin-top: 60px;\r\n  display: grid;\r\n  grid-template-columns: 25% 25% 25% 25%;\r\n`;\r\n","import React from \"react\";\r\nimport Block from \"../block\";\r\nimport { Container } from \"./styledComponents\";\r\n\r\nconst BlockGroup = ({\r\n  simpleBlockClick,\r\n  colorList,\r\n  setColorList,\r\n  basicRegenTimer\r\n}) => (\r\n  <Container>\r\n    {colorList.map((color, i) => (\r\n      <Block\r\n        simpleBlockClick={simpleBlockClick}\r\n        basicRegenTimer={basicRegenTimer}\r\n        key={`simpleBlock-${i}`}\r\n        index={i}\r\n        color={color}\r\n        setColor={setColorList}\r\n      />\r\n    ))}\r\n  </Container>\r\n);\r\n\r\nexport default BlockGroup;\r\n","import React from \"react\";\r\n\r\nconst MainCounters = ({ balance }) => (\r\n  <>\r\n    <div>■{balance}</div>\r\n  </>\r\n);\r\n\r\nexport default MainCounters;\r\n","import styled, { css } from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport const Container = styled.div`\r\n  border: 0.5px solid #221c34;\r\n  width: 90%;\r\n  margin: auto;\r\n  margin-bottom: 8px;\r\n  display: flex;\r\n`;\r\n\r\nexport const StyledFontAwesomeIcon = styled(FontAwesomeIcon)``;\r\n\r\nexport const IconContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0 16px;\r\n  margin: auto;\r\n`;\r\n\r\nexport const DescriptionContainer = styled.div`\r\n  width: 60%;\r\n`;\r\n\r\nexport const UpgradeName = styled.p`\r\n  font-size: 12px;\r\n`;\r\n\r\nexport const UpgradeDescription = styled.p`\r\n  font-size: 10px;\r\n`;\r\n\r\nexport const UpgradeButtonContainer = styled.div`\r\n  width: 25%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const UpgradeButton = styled.button`\r\n  border: 2px solid purple;\r\n  background-color: lightBlue;\r\n  border-radius: 6px;\r\n  width: 60px;\r\n  height: 45px;\r\n  font-size: 11px;\r\n  text-align: center;\r\n  ${({ isAvailable }) =>\r\n    !isAvailable &&\r\n    css`\r\n      background-color: gray;\r\n    `};\r\n`;\r\n\r\nexport const UpgradeButtonSpan = styled.span`\r\n  font-size: 16px;\r\n  padding-right: 2px;\r\n`;\r\n","export const formatNumbers = number => {\r\n  const length = Math.ceil(Math.log10(number + 1));\r\n  if (length >= 4 && length < 7) {\r\n    return formatString(number, length, 3, 2, \"K\");\r\n  }\r\n  if (length >= 7 && length < 10) {\r\n    return formatString(number, length, 6, 5, \"M\");\r\n  }\r\n  if (length >= 10 && length < 13) {\r\n    return formatString(number, length, 9, 8, \"B\");\r\n  }\r\n  if (length >= 13 && length < 16) {\r\n    return formatString(number, length, 12, 11, \"T\");\r\n  }\r\n  if (length >= 16 && length < 19) {\r\n    return formatString(number, length, 15, 14, \"Q\");\r\n  }\r\n  if (length >= 19 && length < 22) {\r\n    return formatString(number, length, 18, 17, \"Qi\");\r\n  }\r\n  if (length >= 22 && length < 25) {\r\n    return formatString(number, length, 21, 20, \"Si\");\r\n  }\r\n  if (length >= 25 && length < 28) {\r\n    return formatString(number, length, 24, 23, \"Sep\");\r\n  }\r\n  if (length >= 28 && length < 31) {\r\n    return formatString(number, length, 27, 26, \"Oct\");\r\n  }\r\n  if (length >= 31 && length < 34) {\r\n    return formatString(number, length, 30, 29, \"Ni\");\r\n  }\r\n  if (length >= 34 && length < 37) {\r\n    return formatString(number, length, 33, 32, \"Dec\");\r\n  }\r\n  if (length >= 37) {\r\n    return `${number.toString().substring(0, 1)}.${number\r\n      .toString()\r\n      .substring(1, 3)}x10e${length}`;\r\n  }\r\n  return Math.round(number * 100) / 100;\r\n};\r\n\r\nconst formatString = (number, length, first, second, letter) =>\r\n  `${number.toString().substring(0, length - first)}.${number\r\n    .toString()\r\n    .substring(length - first, length - second)}${letter}`;\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  StyledFontAwesomeIcon,\r\n  IconContainer,\r\n  DescriptionContainer,\r\n  UpgradeName,\r\n  UpgradeDescription,\r\n  UpgradeButtonContainer,\r\n  UpgradeButton,\r\n  UpgradeButtonSpan\r\n} from \"./styledComponents\";\r\nimport { faCoffee } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { formatNumbers } from \"../../libs/bigNumbers\";\r\n\r\nconst UpgradeCard = ({\r\n  title,\r\n  description,\r\n  price,\r\n  setLatestUpgradeId,\r\n  upgradeId,\r\n  level,\r\n  isAvailable,\r\n  nextClickWillRandomize\r\n}) => (\r\n  <Container>\r\n    <IconContainer>\r\n      <StyledFontAwesomeIcon icon={faCoffee} size=\"lg\" />\r\n    </IconContainer>\r\n    <DescriptionContainer>\r\n      <UpgradeName>\r\n        {title}\r\n        {`(${level})`}\r\n      </UpgradeName>\r\n      <UpgradeDescription> {description} </UpgradeDescription>\r\n    </DescriptionContainer>\r\n    <UpgradeButtonContainer>\r\n      <UpgradeButton\r\n        onClick={isAvailable ? () => setLatestUpgradeId(upgradeId) : () => {}}\r\n        isAvailable={isAvailable}\r\n      >\r\n        {nextClickWillRandomize ? (\r\n          \"Waiting\"\r\n        ) : (\r\n          <>\r\n            <UpgradeButtonSpan>■</UpgradeButtonSpan>\r\n            {formatNumbers(price)}\r\n          </>\r\n        )}\r\n      </UpgradeButton>\r\n    </UpgradeButtonContainer>\r\n  </Container>\r\n);\r\n\r\nexport default UpgradeCard;\r\n","import styled, { css } from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport const Container = styled.div`\r\n  border: 0.5px solid #221c34;\r\n  width: 90%;\r\n  margin: auto;\r\n  margin-bottom: 8px;\r\n  display: flex;\r\n`;\r\n\r\nexport const StyledFontAwesomeIcon = styled(FontAwesomeIcon)``;\r\n\r\nexport const IconSection = styled.div`\r\n  padding: 0 16px;\r\n  margin: auto;\r\n  position: relative;\r\n`;\r\n\r\nexport const IconContainer = styled.div``;\r\n\r\nexport const IconLevel = styled.div`\r\n  position: absolute;\r\n  left: 6px;\r\n`;\r\n\r\nexport const DescriptionContainer = styled.div`\r\n  width: 60%;\r\n`;\r\n\r\nexport const UpgradeName = styled.p`\r\n  font-size: 12px;\r\n`;\r\n\r\nexport const UpgradeDescription = styled.p`\r\n  font-size: 10px;\r\n`;\r\n\r\nexport const UpgradeButtonContainer = styled.div`\r\n  width: 25%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const UpgradeButton = styled.button`\r\n  border: 2px solid purple;\r\n  background-color: lightBlue;\r\n  border-radius: 6px;\r\n  width: 60px;\r\n  height: 45px;\r\n  font-size: 11px;\r\n  text-align: center;\r\n  ${({ isAvailable }) =>\r\n    !isAvailable &&\r\n    css`\r\n      background-color: gray;\r\n    `};\r\n`;\r\n\r\nexport const UpgradeButtonSpan = styled.span`\r\n  font-size: 16px;\r\n  padding-right: 2px;\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  StyledFontAwesomeIcon,\r\n  IconContainer,\r\n  DescriptionContainer,\r\n  UpgradeName,\r\n  UpgradeDescription,\r\n  UpgradeButtonContainer,\r\n  UpgradeButton,\r\n  UpgradeButtonSpan,\r\n  IconSection,\r\n  IconLevel\r\n} from \"./styledComponents\";\r\nimport {\r\n  faCoffee,\r\n  faAngleUp,\r\n  faAngleDown\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { formatNumbers } from \"../../libs/bigNumbers\";\r\n\r\nconst RepeatedUpgradeCard = ({\r\n  title,\r\n  description,\r\n  price,\r\n  setLatestUpgradeId,\r\n  upgradeId,\r\n  level,\r\n  isAvailable,\r\n  nextClickWillRandomize,\r\n  upgradeTier,\r\n  setUpgradeTier = () => {}\r\n}) => (\r\n  <Container>\r\n    <IconSection>\r\n      <IconLevel>{upgradeTier}</IconLevel>\r\n      <IconContainer>\r\n        <StyledFontAwesomeIcon\r\n          icon={faAngleUp}\r\n          size=\"sm\"\r\n          onClick={() => setUpgradeTier(upgradeId, 1)}\r\n        />\r\n      </IconContainer>\r\n      <IconContainer>\r\n        <StyledFontAwesomeIcon icon={faCoffee} size=\"lg\" />\r\n      </IconContainer>\r\n      <IconContainer>\r\n        <StyledFontAwesomeIcon\r\n          icon={faAngleDown}\r\n          size=\"sm\"\r\n          onClick={() => setUpgradeTier(upgradeId, -1)}\r\n        />\r\n      </IconContainer>\r\n    </IconSection>\r\n\r\n    <DescriptionContainer>\r\n      <UpgradeName>\r\n        {title}\r\n        {`(${level})`}\r\n      </UpgradeName>\r\n      <UpgradeDescription> {description} </UpgradeDescription>\r\n    </DescriptionContainer>\r\n    <UpgradeButtonContainer>\r\n      <UpgradeButton\r\n        onClick={isAvailable ? () => setLatestUpgradeId(upgradeId) : () => {}}\r\n        isAvailable={isAvailable}\r\n      >\r\n        {nextClickWillRandomize ? (\r\n          \"Waiting\"\r\n        ) : (\r\n          <>\r\n            <UpgradeButtonSpan>■</UpgradeButtonSpan>\r\n            {formatNumbers(price)}\r\n          </>\r\n        )}\r\n      </UpgradeButton>\r\n    </UpgradeButtonContainer>\r\n  </Container>\r\n);\r\n\r\nexport default RepeatedUpgradeCard;\r\n","import React from \"react\";\r\nimport UpgradeCard from \"../upgradeCard\";\r\nimport RepeatedUpgradeCard from \"../repeatedUpgradeCard\";\r\n\r\nconst UpgradeSection = ({\r\n  counter,\r\n  upgrades = [],\r\n  setLatestUpgradeId,\r\n  upgradeLevels = [],\r\n  upgradePrices = [],\r\n  isUpgradeAvailable = [],\r\n  nextClickWillRandomize = false,\r\n  upgradeTiers = [],\r\n  setUpgradeTier\r\n}) => (\r\n  <div>\r\n    <p>Upgrades</p>\r\n    {upgrades.map((e, i) =>\r\n      e.unique ? (\r\n        <UpgradeCard\r\n          description={e.description}\r\n          price={upgradePrices[i]}\r\n          title={e.title}\r\n          setLatestUpgradeId={setLatestUpgradeId}\r\n          upgradeId={e.id}\r\n          level={upgradeLevels[i]}\r\n          isAvailable={\r\n            isUpgradeAvailable[i] &&\r\n            !(e.twoClickUpgrade && nextClickWillRandomize)\r\n          }\r\n          nextClickWillRandomize={e.twoClickUpgrade && nextClickWillRandomize}\r\n        />\r\n      ) : (\r\n        <RepeatedUpgradeCard\r\n          description={e.description[0]}\r\n          price={upgradePrices[i]}\r\n          title={e.title[0]}\r\n          setLatestUpgradeId={setLatestUpgradeId}\r\n          upgradeId={e.id}\r\n          level={upgradeLevels[i]}\r\n          isAvailable={\r\n            isUpgradeAvailable[i] &&\r\n            !(e.twoClickUpgrade && nextClickWillRandomize)\r\n          }\r\n          nextClickWillRandomize={e.twoClickUpgrade && nextClickWillRandomize}\r\n          upgradeTier={upgradeTiers[i]}\r\n          setUpgradeTier={setUpgradeTier}\r\n        />\r\n      )\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default UpgradeSection;\r\n","export const UpgradeList = [\r\n  {\r\n    title: [\"Click\", \"Super Click\"],\r\n    description: [\r\n      \"Upgrade your basic click amount\",\r\n      \"Upgrade your super click amount\"\r\n    ],\r\n    basePrice: [1, 100],\r\n    id: 0,\r\n    twoClickUpgrade: false,\r\n    unique: false\r\n  },\r\n  {\r\n    title: [\"Random Color\", \"More Random Color\"],\r\n    description: [\r\n      \"Next click will upgrade one of your basic blocks to a random colored passive\",\r\n      \"Next click will upgrade one of your basic blocks to a random colored passive\"\r\n    ],\r\n    basePrice: [150, 3000],\r\n    id: 1,\r\n    twoClickUpgrade: true,\r\n    unique: false\r\n  },\r\n  {\r\n    title: \"Regen Time\",\r\n    description: \"Upgrade amount of time regenerating block\",\r\n    basePrice: 2000,\r\n    id: 2,\r\n    twoClickUpgrade: false,\r\n    unique: true\r\n  }\r\n];\r\n","export const updateMultipliers =\r\n  (\r\n    simpleClickMultiplier,\r\n    setSimpleClickMultiplier,\r\n    passiveIncrementPerSecond,\r\n    setPassiveIncrementPerSecond,\r\n    basicRegenTimer,\r\n    setBasicRegenTimer,\r\n    upgradeLevels,\r\n    setUpgradeLevels,\r\n    counter,\r\n    setCounter,\r\n    upgradePrices,\r\n    setUpgradePrices,\r\n    passiveCounter,\r\n    setPassiveCounter,\r\n    setNextClickWillRandomize\r\n  ) =>\r\n  upgradeId => {\r\n    if (counter + passiveCounter >= upgradePrices[upgradeId]) {\r\n      let wasIncrementPerSecondChanged = false;\r\n      switch (upgradeId) {\r\n        case 0:\r\n          setSimpleClickMultiplier(simpleClickMultiplier + 0.2);\r\n          break;\r\n        case 1:\r\n          wasIncrementPerSecondChanged = true;\r\n          setNextClickWillRandomize(true);\r\n          // setPassiveIncrementPerSecond(passiveIncrementPerSecond + 1);\r\n          break;\r\n        case 2:\r\n          setBasicRegenTimer(basicRegenTimer * 0.9);\r\n          break;\r\n        default:\r\n          console.log(\"No Upgrade\");\r\n          break;\r\n      }\r\n      if (upgradeLevels[upgradeId] >= 0) {\r\n        const newUpgradeLevels = [...upgradeLevels];\r\n        newUpgradeLevels[upgradeId] = newUpgradeLevels[upgradeId] + 1;\r\n        setUpgradeLevels(newUpgradeLevels);\r\n        if (passiveCounter > 0) {\r\n          if (passiveCounter >= upgradePrices[upgradeId]) {\r\n            setPassiveCounter(\r\n              passiveCounter -\r\n                upgradePrices[upgradeId] +\r\n                (wasIncrementPerSecondChanged ? passiveIncrementPerSecond : 0)\r\n            );\r\n          } else {\r\n            setCounter(\r\n              counter -\r\n                (upgradePrices[upgradeId] - passiveCounter) +\r\n                (wasIncrementPerSecondChanged ? passiveIncrementPerSecond : 0)\r\n            );\r\n            setPassiveCounter(0);\r\n          }\r\n        } else {\r\n          setCounter(\r\n            counter -\r\n              upgradePrices[upgradeId] +\r\n              (wasIncrementPerSecondChanged ? passiveIncrementPerSecond : 0)\r\n          );\r\n        }\r\n\r\n        const newUpgradePrices = [...upgradePrices];\r\n        newUpgradePrices[upgradeId] =\r\n          Math.round(newUpgradePrices[upgradeId] * 1.2 * 100) / 100;\r\n\r\n        setUpgradePrices(newUpgradePrices);\r\n      }\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n","export const getRandomColor = () => {\r\n  var letters = \"0123456789ABCDEF\";\r\n  var color = \"#\";\r\n  for (var i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n  return color;\r\n};\r\n\r\nexport const rareBlockGenerator = (colorList, setColorList) => id => {\r\n  const newColorList = [...colorList];\r\n  newColorList[id] = getRandomColor();\r\n  setColorList(newColorList);\r\n};\r\n","import { UpgradeList } from \"./upgradeList\";\r\n\r\nexport const updateTier = (\r\n  upgradePrices,\r\n  setUpgradePrices,\r\n  upgradeLevels,\r\n  setUpgradeLevels,\r\n  upgradeTiers,\r\n  setUpgradeTiers\r\n) => (upgradeId, increment) => {\r\n  const newUpgradeTiers = [...upgradeTiers];\r\n  if (newUpgradeTiers[upgradeId] + increment !== 0) {\r\n    newUpgradeTiers[upgradeId] += increment;\r\n    setUpgradeTiers(newUpgradeTiers);\r\n    const newUpgradePrices = [...upgradePrices];\r\n    newUpgradePrices[upgradeId] =\r\n      UpgradeList[upgradeId].basePrice[newUpgradeTiers[upgradeId] - 1];\r\n    setUpgradePrices(newUpgradePrices);\r\n  }\r\n};\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport BlockGroup from \"../blockGroup/index\";\r\nimport MainCounters from \"../mainCounters\";\r\nimport UpgradeSection from \"../upgradeSection\";\r\nimport { UpgradeList } from \"../../libs/upgradeList\";\r\nimport { updateMultipliers } from \"../../libs/multipliers\";\r\nimport { rareBlockGenerator } from \"../../libs/rareBlockGenerator\";\r\nimport { formatNumbers } from \"../../libs/bigNumbers\";\r\nimport { updateTier } from \"../../libs/updateTier\";\r\n\r\nconst Main = () => {\r\n  const [counter, setCounter] = useState(0);\r\n  const [passiveCounter, setPassiveCounter] = useState(0);\r\n  const [passiveIncrementPerSecond, setPassiveIncrementPerSecond] = useState(0);\r\n  const [simpleClickMultiplier, setSimpleClickMultiplier] = useState(1);\r\n  const [nextClickWillRandomize, setNextClickWillRandomize] = useState(false);\r\n  const [basicRegenTimer, setBasicRegenTimer] = useState(12000);\r\n  const [upgradeLevels, setUpgradeLevels] = useState(UpgradeList.map(() => 0));\r\n  const [upgradeTiers, setUpgradeTiers] = useState(UpgradeList.map(() => 1));\r\n  const [upgradePrices, setUpgradePrices] = useState(\r\n    UpgradeList.map((e, i) =>\r\n      UpgradeList[i].unique\r\n        ? UpgradeList[i].basePrice\r\n        : UpgradeList[i].basePrice[0]\r\n    )\r\n  );\r\n  const [colorList, setColorList] = useState(\r\n    [...Array(16)].map(() => \"#ffffff\")\r\n  );\r\n  const [isUpgradeAvailable, setIsUpgradeAvailable] = useState(\r\n    UpgradeList.map(() => false)\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (passiveIncrementPerSecond !== 0) {\r\n      const interval = setInterval(() => {\r\n        setPassiveCounter(passiveCounter + passiveIncrementPerSecond);\r\n      }, 1000);\r\n      return () => {\r\n        clearInterval(interval);\r\n      };\r\n    }\r\n  }, [passiveCounter, passiveIncrementPerSecond]);\r\n\r\n  useEffect(() => {\r\n    const isUpgradeAvailableBuffer = [...isUpgradeAvailable];\r\n    for (let i = 0; i < UpgradeList.length; i++) {\r\n      isUpgradeAvailableBuffer[i] =\r\n        upgradePrices[i] <= counter + passiveCounter;\r\n    }\r\n    setIsUpgradeAvailable(isUpgradeAvailableBuffer);\r\n  }, [counter, passiveCounter, upgradePrices]);\r\n\r\n  const simpleClick = useCallback(\r\n    (index, setColor) => {\r\n      setCounter(1 * simpleClickMultiplier + counter);\r\n      if (nextClickWillRandomize) {\r\n        setPassiveIncrementPerSecond(passiveIncrementPerSecond + 1);\r\n        setNextClickWillRandomize(false);\r\n        setColor(index);\r\n      }\r\n    },\r\n    [\r\n      counter,\r\n      simpleClickMultiplier,\r\n      nextClickWillRandomize,\r\n      passiveIncrementPerSecond\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <MainCounters balance={formatNumbers(counter + passiveCounter)} />\r\n      <BlockGroup\r\n        simpleBlockClick={simpleClick}\r\n        basicRegenTimer={basicRegenTimer}\r\n        colorList={colorList}\r\n        setColorList={rareBlockGenerator(colorList, setColorList)}\r\n      />\r\n      <UpgradeSection\r\n        upgrades={UpgradeList}\r\n        upgradeLevels={upgradeLevels}\r\n        upgradePrices={upgradePrices}\r\n        isUpgradeAvailable={isUpgradeAvailable}\r\n        nextClickWillRandomize={nextClickWillRandomize}\r\n        upgradeTiers={upgradeTiers}\r\n        setLatestUpgradeId={updateMultipliers(\r\n          simpleClickMultiplier,\r\n          setSimpleClickMultiplier,\r\n          passiveIncrementPerSecond,\r\n          setPassiveIncrementPerSecond,\r\n          basicRegenTimer,\r\n          setBasicRegenTimer,\r\n          upgradeLevels,\r\n          setUpgradeLevels,\r\n          counter,\r\n          setCounter,\r\n          upgradePrices,\r\n          setUpgradePrices,\r\n          passiveCounter,\r\n          setPassiveCounter,\r\n          setNextClickWillRandomize\r\n        )}\r\n        setUpgradeTier={updateTier(\r\n          upgradePrices,\r\n          setUpgradePrices,\r\n          upgradeLevels,\r\n          setUpgradeLevels,\r\n          upgradeTiers,\r\n          setUpgradeTiers\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import \"./App.css\";\r\nimport Header from \"./components/header/index\";\r\nimport Main from \"./components/main\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}