{"version":3,"sources":["components/header/styledComponents.js","components/header/index.js","components/block/styledComponents.js","components/block/index.js","components/blockGroup/styledComponents.js","components/blockGroup/index.js","components/mainCounters/index.js","components/upgradeCard/styledComponents.js","libs/bigNumbers.js","components/upgradeCard/index.js","components/upgradeSection/index.js","libs/upgradeList.js","libs/multipliers.js","libs/rareBlockGenerator.js","components/main/index.js","App.js","reportWebVitals.js","index.js"],"names":["StyledHeader","styled","header","Header","StyledBlock","div","color","css","fadeOut","Block","simpleBlockClick","index","setColor","basicRegenTimer","useState","wasClicked","setWasClicked","onClick","setTimeout","Container","BlockGroup","colorList","setColorList","map","i","MainCounters","balance","StyledFontAwesomeIcon","FontAwesomeIcon","IconContainer","DescriptionContainer","UpgradeName","p","UpgradeDescription","UpgradeButtonContainer","UpgradeButton","button","isAvailable","UpgradeButtonSpan","span","formatNumbers","number","length","Math","ceil","log10","formatString","toString","substring","round","first","second","letter","UpgradeCard","title","description","price","setLatestUpgradeId","upgradeId","level","nextClickWillRandomize","icon","faCoffee","size","UpgradeSection","counter","upgrades","upgradeLevels","upgradePrices","isUpgradeAvailable","e","id","twoClickUpgrade","UpgradeList","basePrice","updateMultipliers","simpleClickMultiplier","setSimpleClickMultiplier","passiveIncrementPerSecond","setPassiveIncrementPerSecond","setBasicRegenTimer","setUpgradeLevels","setCounter","setUpgradePrices","passiveCounter","setPassiveCounter","setNextClickWillRandomize","wasIncrementPerSecondChanged","console","log","newUpgradeLevels","newUpgradePrices","rareBlockGenerator","newColorList","floor","random","getRandomColor","Main","Array","setIsUpgradeAvailable","useEffect","interval","setInterval","clearInterval","isUpgradeAvailableBuffer","simpleClick","useCallback","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1d5722c.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledHeader = styled.header`\n  width: 100%;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  background-color: #221c34;\n`;\n","import React from \"react\";\nimport { StyledHeader } from \"./styledComponents\";\n\nconst Header = () => <StyledHeader>Incremental Squares</StyledHeader>;\n\nexport default Header;\n","import styled, { css } from \"styled-components\";\n\nexport const StyledBlock = styled.div`\n  height: 40px;\n  width: 40px;\n  background-color: white;\n  margin: 4px;\n\n  ${({ color }) =>\n    color &&\n    css`\n      background-color: ${color};\n    `}\n\n  ${({ fadeOut }) =>\n    fadeOut &&\n    css`\n      transition: opacity 250ms ease-out;\n      opacity: 0;\n    `}\n\n  ${({ fadeOut }) =>\n    !fadeOut &&\n    css`\n      transition: opacity 250ms ease-in;\n      opacity: 1;\n    `}\n`;\n","import React, { useState } from \"react\";\nimport { StyledBlock } from \"./styledComponents\";\n\nconst Block = ({\n  simpleBlockClick,\n  index,\n  color,\n  setColor,\n  basicRegenTimer\n}) => {\n  const [wasClicked, setWasClicked] = useState(false);\n  return (\n    <StyledBlock\n      onClick={\n        wasClicked\n          ? () => {}\n          : () => {\n              setWasClicked(true);\n              simpleBlockClick(index, setColor);\n              setTimeout(() => {\n                setWasClicked(false);\n              }, basicRegenTimer);\n            }\n      }\n      fadeOut={wasClicked}\n      color={color}\n    />\n  );\n};\n\nexport default Block;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  height: 200px;\n  width: 200px;\n  margin: auto;\n  margin-top: 60px;\n  display: grid;\n  grid-template-columns: 25% 25% 25% 25%;\n`;\n","import React from \"react\";\nimport Block from \"../block\";\nimport { Container } from \"./styledComponents\";\n\nconst BlockGroup = ({\n  simpleBlockClick,\n  colorList,\n  setColorList,\n  basicRegenTimer\n}) => (\n  <Container>\n    {colorList.map((color, i) => (\n      <Block\n        simpleBlockClick={simpleBlockClick}\n        basicRegenTimer={basicRegenTimer}\n        key={`simpleBlock-${i}`}\n        index={i}\n        color={color}\n        setColor={setColorList}\n      />\n    ))}\n  </Container>\n);\n\nexport default BlockGroup;\n","import React from \"react\";\n\nconst MainCounters = ({ balance }) => (\n  <>\n    <div>■{balance}</div>\n  </>\n);\n\nexport default MainCounters;\n","import styled, { css } from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport const Container = styled.div`\n  border: 0.5px solid #221c34;\n  width: 90%;\n  margin: auto;\n  margin-bottom: 8px;\n  display: flex;\n`;\n\nexport const StyledFontAwesomeIcon = styled(FontAwesomeIcon)``;\n\nexport const IconContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0 16px;\n`;\n\nexport const DescriptionContainer = styled.div`\n  width: 60%;\n`;\n\nexport const UpgradeName = styled.p`\n  font-size: 12px;\n`;\n\nexport const UpgradeDescription = styled.p`\n  font-size: 10px;\n`;\n\nexport const UpgradeButtonContainer = styled.div`\n  width: 25%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const UpgradeButton = styled.button`\n  border: 2px solid purple;\n  background-color: lightBlue;\n  border-radius: 6px;\n  width: 60px;\n  height: 45px;\n  font-size: 11px;\n  text-align: center;\n  ${({ isAvailable }) =>\n    !isAvailable &&\n    css`\n      background-color: gray;\n    `};\n`;\n\nexport const UpgradeButtonSpan = styled.span`\n  font-size: 16px;\n  padding-right: 2px;\n`;\n","export const formatNumbers = number => {\n  const length = Math.ceil(Math.log10(number + 1));\n  if (length >= 4 && length < 7) {\n    return formatString(number, length, 3, 2, \"K\");\n  }\n  if (length >= 7 && length < 10) {\n    return formatString(number, length, 6, 5, \"M\");\n  }\n  if (length >= 10 && length < 13) {\n    return formatString(number, length, 9, 8, \"B\");\n  }\n  if (length >= 13 && length < 16) {\n    return formatString(number, length, 12, 11, \"T\");\n  }\n  if (length >= 16 && length < 19) {\n    return formatString(number, length, 15, 14, \"Q\");\n  }\n  if (length >= 19 && length < 22) {\n    return formatString(number, length, 18, 17, \"Qi\");\n  }\n  if (length >= 22 && length < 25) {\n    return formatString(number, length, 21, 20, \"Si\");\n  }\n  if (length >= 25 && length < 28) {\n    return formatString(number, length, 24, 23, \"Sep\");\n  }\n  if (length >= 28 && length < 31) {\n    return formatString(number, length, 27, 26, \"Oct\");\n  }\n  if (length >= 31 && length < 34) {\n    return formatString(number, length, 30, 29, \"Ni\");\n  }\n  if (length >= 34 && length < 37) {\n    return formatString(number, length, 33, 32, \"Dec\");\n  }\n  if (length >= 37) {\n    return `${number.toString().substring(0, 1)}.${number\n      .toString()\n      .substring(1, 3)}x10e${length}`;\n  }\n  return Math.round(number * 100) / 100;\n};\n\nconst formatString = (number, length, first, second, letter) =>\n  `${number.toString().substring(0, length - first)}.${number\n    .toString()\n    .substring(length - first, length - second)}${letter}`;\n","import React from \"react\";\nimport {\n  Container,\n  StyledFontAwesomeIcon,\n  IconContainer,\n  DescriptionContainer,\n  UpgradeName,\n  UpgradeDescription,\n  UpgradeButtonContainer,\n  UpgradeButton,\n  UpgradeButtonSpan\n} from \"./styledComponents\";\nimport { faCoffee } from \"@fortawesome/free-solid-svg-icons\";\nimport { formatNumbers } from \"../../libs/bigNumbers\";\n\nconst UpgradeCard = ({\n  title,\n  description,\n  price,\n  setLatestUpgradeId,\n  upgradeId,\n  level,\n  isAvailable,\n  nextClickWillRandomize\n}) => (\n  <Container>\n    <IconContainer>\n      <StyledFontAwesomeIcon icon={faCoffee} size=\"lg\" />\n    </IconContainer>\n    <DescriptionContainer>\n      <UpgradeName>\n        {title}\n        {`(${level})`}\n      </UpgradeName>\n      <UpgradeDescription> {description} </UpgradeDescription>\n    </DescriptionContainer>\n    <UpgradeButtonContainer>\n      <UpgradeButton\n        onClick={isAvailable ? () => setLatestUpgradeId(upgradeId) : () => {}}\n        isAvailable={isAvailable}\n      >\n        {nextClickWillRandomize ? (\n          \"Waiting\"\n        ) : (\n          <>\n            <UpgradeButtonSpan>■</UpgradeButtonSpan>\n            {formatNumbers(price)}\n          </>\n        )}\n      </UpgradeButton>\n    </UpgradeButtonContainer>\n  </Container>\n);\n\nexport default UpgradeCard;\n","import React from \"react\";\nimport UpgradeCard from \"../upgradeCard\";\n\nconst UpgradeSection = ({\n  counter,\n  upgrades = [],\n  setLatestUpgradeId,\n  upgradeLevels = [],\n  upgradePrices = [],\n  isUpgradeAvailable = [],\n  nextClickWillRandomize = false\n}) => (\n  <div>\n    <p>Upgrades</p>\n    {upgrades.map((e, i) => (\n      <UpgradeCard\n        description={e.description}\n        price={upgradePrices[i]}\n        title={e.title}\n        setLatestUpgradeId={setLatestUpgradeId}\n        upgradeId={e.id}\n        level={upgradeLevels[i]}\n        isAvailable={\n          isUpgradeAvailable[i] &&\n          !(e.twoClickUpgrade && nextClickWillRandomize)\n        }\n        nextClickWillRandomize={e.twoClickUpgrade && nextClickWillRandomize}\n      />\n    ))}\n  </div>\n);\n\nexport default UpgradeSection;\n","export const UpgradeList = [\n  {\n    title: \"Click\",\n    description: \"Upgrade your basic click amount\",\n    basePrice: 1,\n    id: 0,\n    twoClickUpgrade: false\n  },\n  {\n    title: \"Random Color\",\n    description:\n      \"Next click will upgrade one of your basic blocks to a random colored passive\",\n    basePrice: 150,\n    id: 1,\n    twoClickUpgrade: true\n  },\n  {\n    title: \"Regen Time\",\n    description: \"Upgrade amount of time regenerating block\",\n    basePrice: 2000,\n    id: 2,\n    twoClickUpgrade: false\n  }\n];\n","export const updateMultipliers =\n  (\n    simpleClickMultiplier,\n    setSimpleClickMultiplier,\n    passiveIncrementPerSecond,\n    setPassiveIncrementPerSecond,\n    basicRegenTimer,\n    setBasicRegenTimer,\n    upgradeLevels,\n    setUpgradeLevels,\n    counter,\n    setCounter,\n    upgradePrices,\n    setUpgradePrices,\n    passiveCounter,\n    setPassiveCounter,\n    setNextClickWillRandomize\n  ) =>\n  upgradeId => {\n    if (counter + passiveCounter >= upgradePrices[upgradeId]) {\n      let wasIncrementPerSecondChanged = false;\n      switch (upgradeId) {\n        case 0:\n          setSimpleClickMultiplier(simpleClickMultiplier + 0.2);\n          break;\n        case 1:\n          wasIncrementPerSecondChanged = true;\n          setNextClickWillRandomize(true);\n          // setPassiveIncrementPerSecond(passiveIncrementPerSecond + 1);\n          break;\n        case 2:\n          setBasicRegenTimer(basicRegenTimer * 0.9);\n          break;\n        default:\n          console.log(\"No Upgrade\");\n          break;\n      }\n      if (upgradeLevels[upgradeId] >= 0) {\n        const newUpgradeLevels = [...upgradeLevels];\n        newUpgradeLevels[upgradeId] = newUpgradeLevels[upgradeId] + 1;\n        setUpgradeLevels(newUpgradeLevels);\n        if (passiveCounter > 0) {\n          if (passiveCounter >= upgradePrices[upgradeId]) {\n            setPassiveCounter(\n              passiveCounter -\n                upgradePrices[upgradeId] +\n                (wasIncrementPerSecondChanged ? passiveIncrementPerSecond : 0)\n            );\n          } else {\n            setCounter(\n              counter -\n                (upgradePrices[upgradeId] - passiveCounter) +\n                (wasIncrementPerSecondChanged ? passiveIncrementPerSecond : 0)\n            );\n            setPassiveCounter(0);\n          }\n        } else {\n          setCounter(\n            counter -\n              upgradePrices[upgradeId] +\n              (wasIncrementPerSecondChanged ? passiveIncrementPerSecond : 0)\n          );\n        }\n\n        const newUpgradePrices = [...upgradePrices];\n        newUpgradePrices[upgradeId] =\n          Math.round(newUpgradePrices[upgradeId] * 1.2 * 100) / 100;\n\n        setUpgradePrices(newUpgradePrices);\n      }\n    } else {\n      return;\n    }\n  };\n","export const getRandomColor = () => {\n  var letters = \"0123456789ABCDEF\";\n  var color = \"#\";\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n};\n\nexport const rareBlockGenerator = (colorList, setColorList) => id => {\n  const newColorList = [...colorList];\n  newColorList[id] = getRandomColor();\n  setColorList(newColorList);\n};\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport BlockGroup from \"../blockGroup/index\";\nimport MainCounters from \"../mainCounters\";\nimport UpgradeSection from \"../upgradeSection\";\nimport { UpgradeList } from \"../../libs/upgradeList\";\nimport { updateMultipliers } from \"../../libs/multipliers\";\nimport { rareBlockGenerator } from \"../../libs/rareBlockGenerator\";\nimport { formatNumbers } from \"../../libs/bigNumbers\";\n\nconst Main = () => {\n  const [counter, setCounter] = useState(10000);\n  const [passiveCounter, setPassiveCounter] = useState(0);\n  const [passiveIncrementPerSecond, setPassiveIncrementPerSecond] = useState(0);\n  const [simpleClickMultiplier, setSimpleClickMultiplier] = useState(1);\n  const [nextClickWillRandomize, setNextClickWillRandomize] = useState(false);\n  const [basicRegenTimer, setBasicRegenTimer] = useState(12000);\n  const [upgradeLevels, setUpgradeLevels] = useState(UpgradeList.map(() => 0));\n  const [upgradePrices, setUpgradePrices] = useState(\n    UpgradeList.map((e, i) => UpgradeList[i].basePrice)\n  );\n  const [colorList, setColorList] = useState(\n    [...Array(16)].map(() => \"#ffffff\")\n  );\n  const [isUpgradeAvailable, setIsUpgradeAvailable] = useState(\n    UpgradeList.map(() => false)\n  );\n\n  useEffect(() => {\n    if (passiveIncrementPerSecond !== 0) {\n      const interval = setInterval(() => {\n        setPassiveCounter(passiveCounter + passiveIncrementPerSecond);\n      }, 1000);\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [passiveCounter, passiveIncrementPerSecond]);\n\n  useEffect(() => {\n    const isUpgradeAvailableBuffer = [...isUpgradeAvailable];\n    for (let i = 0; i < UpgradeList.length; i++) {\n      isUpgradeAvailableBuffer[i] =\n        upgradePrices[i] <= counter + passiveCounter;\n    }\n    setIsUpgradeAvailable(isUpgradeAvailableBuffer);\n  }, [counter, passiveCounter, upgradePrices]);\n\n  const simpleClick = useCallback(\n    (index, setColor) => {\n      setCounter(1 * simpleClickMultiplier + counter);\n      if (nextClickWillRandomize) {\n        setPassiveIncrementPerSecond(passiveIncrementPerSecond + 1);\n        setNextClickWillRandomize(false);\n        setColor(index);\n      }\n    },\n    [\n      counter,\n      simpleClickMultiplier,\n      nextClickWillRandomize,\n      passiveIncrementPerSecond\n    ]\n  );\n\n  return (\n    <>\n      <MainCounters balance={formatNumbers(counter + passiveCounter)} />\n      <BlockGroup\n        simpleBlockClick={simpleClick}\n        basicRegenTimer={basicRegenTimer}\n        colorList={colorList}\n        setColorList={rareBlockGenerator(colorList, setColorList)}\n      />\n      <UpgradeSection\n        upgrades={UpgradeList}\n        upgradeLevels={upgradeLevels}\n        upgradePrices={upgradePrices}\n        isUpgradeAvailable={isUpgradeAvailable}\n        nextClickWillRandomize={nextClickWillRandomize}\n        setLatestUpgradeId={updateMultipliers(\n          simpleClickMultiplier,\n          setSimpleClickMultiplier,\n          passiveIncrementPerSecond,\n          setPassiveIncrementPerSecond,\n          basicRegenTimer,\n          setBasicRegenTimer,\n          upgradeLevels,\n          setUpgradeLevels,\n          counter,\n          setCounter,\n          upgradePrices,\n          setUpgradePrices,\n          passiveCounter,\n          setPassiveCounter,\n          setNextClickWillRandomize\n        )}\n      />\n    </>\n  );\n};\n\nexport default Main;\n","import \"./App.css\";\nimport Header from \"./components/header/index\";\nimport Main from \"./components/main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}