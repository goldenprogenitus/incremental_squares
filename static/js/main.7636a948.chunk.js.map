{"version":3,"sources":["components/header/styledComponents.js","components/header/index.js","components/block/styledComponents.js","components/block/index.js","components/blockGroup/styledComponents.js","components/blockGroup/index.js","components/mainCounters/index.js","components/upgradeCard/styledComponents.js","libs/bigNumbers.js","components/upgradeCard/index.js","components/repeatedUpgradeCard/styledComponents.js","components/repeatedUpgradeCard/index.js","components/upgradeSection/index.js","libs/upgradeList.js","libs/multipliers.js","libs/rareBlockGenerator.js","libs/updateTier.js","components/main/index.js","App.js","reportWebVitals.js","index.js"],"names":["StyledHeader","styled","header","Header","StyledBlock","div","color","css","fadeOut","Block","simpleBlockClick","index","setColor","basicRegenTimer","useState","wasClicked","setWasClicked","onClick","setTimeout","Container","BlockGroup","colorList","setColorList","map","i","MainCounters","balance","StyledFontAwesomeIcon","FontAwesomeIcon","IconContainer","DescriptionContainer","UpgradeName","p","UpgradeDescription","UpgradeButtonContainer","UpgradeButton","button","isAvailable","UpgradeButtonSpan","span","formatNumbers","number","length","Math","ceil","log10","formatString","toString","substring","round","first","second","letter","UpgradeCard","title","description","price","setLatestUpgradeId","upgradeId","level","nextClickWillRandomize","icon","faCoffee","size","IconSection","HidableIconContainer","props","isVisible","IconLevel","RepeatedUpgradeCard","upgradeTier","setUpgradeTier","effectLength","unlockNextTierPrice","isUpVisible","isDownVisible","faAngleUp","faAngleDown","UpgradeSection","counter","upgrades","upgradeLevels","upgradePrices","isUpgradeAvailable","upgradeTiers","e","unique","id","twoClickUpgrade","effect","levelTrigger","UpgradeList","basePrice","updateMultipliers","simpleClickMultiplier","setSimpleClickMultiplier","passiveIncrementPerSecond","setPassiveIncrementPerSecond","setBasicRegenTimer","setUpgradeLevels","setCounter","setUpgradePrices","passiveCounter","setPassiveCounter","setNextClickWillRandomize","upgradeEffects","wasIncrementPerSecondChanged","console","log","newUpgradeLevels","newUpgradePrices","rareBlockGenerator","newColorList","floor","random","getRandomColor","previousTiersMap","updateTier","setUpgradeTiers","setUpgradeEffects","increment","newUpgradeTiers","newUpgradeEffects","undefined","levels","Main","Array","setIsUpgradeAvailable","useEffect","interval","setInterval","clearInterval","isUpgradeAvailableBuffer","simpleClick","useCallback","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7636a948.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledHeader = styled.header`\n  width: 100%;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  background-color: #221c34;\n`;\n","import React from \"react\";\nimport { StyledHeader } from \"./styledComponents\";\n\nconst Header = () => <StyledHeader>Incremental Squares</StyledHeader>;\n\nexport default Header;\n","import styled, { css } from \"styled-components\";\n\nexport const StyledBlock = styled.div`\n  height: 40px;\n  width: 40px;\n  background-color: white;\n  margin: 4px;\n\n  ${({ color }) =>\n    color &&\n    css`\n      background-color: ${color};\n    `}\n\n  ${({ fadeOut }) =>\n    fadeOut &&\n    css`\n      transition: opacity 250ms ease-out;\n      opacity: 0;\n    `}\n\n  ${({ fadeOut }) =>\n    !fadeOut &&\n    css`\n      transition: opacity 250ms ease-in;\n      opacity: 1;\n    `}\n`;\n","import React, { useState } from \"react\";\nimport { StyledBlock } from \"./styledComponents\";\n\nconst Block = ({\n  simpleBlockClick,\n  index,\n  color,\n  setColor,\n  basicRegenTimer\n}) => {\n  const [wasClicked, setWasClicked] = useState(false);\n  return (\n    <StyledBlock\n      onClick={\n        wasClicked\n          ? () => {}\n          : () => {\n              setWasClicked(true);\n              simpleBlockClick(index, setColor);\n              setTimeout(() => {\n                setWasClicked(false);\n              }, basicRegenTimer);\n            }\n      }\n      fadeOut={wasClicked}\n      color={color}\n    />\n  );\n};\n\nexport default Block;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  height: 200px;\n  width: 200px;\n  margin: auto;\n  margin-top: 60px;\n  display: grid;\n  grid-template-columns: 25% 25% 25% 25%;\n`;\n","import React from \"react\";\nimport Block from \"../block\";\nimport { Container } from \"./styledComponents\";\n\nconst BlockGroup = ({\n  simpleBlockClick,\n  colorList,\n  setColorList,\n  basicRegenTimer\n}) => (\n  <Container>\n    {colorList.map((color, i) => (\n      <Block\n        simpleBlockClick={simpleBlockClick}\n        basicRegenTimer={basicRegenTimer}\n        key={`simpleBlock-${i}`}\n        index={i}\n        color={color}\n        setColor={setColorList}\n      />\n    ))}\n  </Container>\n);\n\nexport default BlockGroup;\n","import React from \"react\";\n\nconst MainCounters = ({ balance }) => (\n  <>\n    <div>■{balance}</div>\n  </>\n);\n\nexport default MainCounters;\n","import styled, { css } from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport const Container = styled.div`\n  border: 0.5px solid #221c34;\n  width: 90%;\n  margin: auto;\n  margin-bottom: 8px;\n  display: flex;\n`;\n\nexport const StyledFontAwesomeIcon = styled(FontAwesomeIcon)``;\n\nexport const IconContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0 16px;\n  margin: auto;\n`;\n\nexport const DescriptionContainer = styled.div`\n  width: 60%;\n`;\n\nexport const UpgradeName = styled.p`\n  font-size: 12px;\n`;\n\nexport const UpgradeDescription = styled.p`\n  font-size: 10px;\n`;\n\nexport const UpgradeButtonContainer = styled.div`\n  width: 25%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const UpgradeButton = styled.button`\n  border: 2px solid purple;\n  background-color: lightBlue;\n  border-radius: 6px;\n  width: 60px;\n  height: 45px;\n  font-size: 11px;\n  text-align: center;\n  ${({ isAvailable }) =>\n    !isAvailable &&\n    css`\n      background-color: gray;\n    `};\n`;\n\nexport const UpgradeButtonSpan = styled.span`\n  font-size: 16px;\n  padding-right: 2px;\n`;\n","export const formatNumbers = number => {\n  const length = Math.ceil(Math.log10(number + 1));\n  if (length >= 4 && length < 7) {\n    return formatString(number, length, 3, 2, \"K\");\n  }\n  if (length >= 7 && length < 10) {\n    return formatString(number, length, 6, 5, \"M\");\n  }\n  if (length >= 10 && length < 13) {\n    return formatString(number, length, 9, 8, \"B\");\n  }\n  if (length >= 13 && length < 16) {\n    return formatString(number, length, 12, 11, \"T\");\n  }\n  if (length >= 16 && length < 19) {\n    return formatString(number, length, 15, 14, \"Q\");\n  }\n  if (length >= 19 && length < 22) {\n    return formatString(number, length, 18, 17, \"Qi\");\n  }\n  if (length >= 22 && length < 25) {\n    return formatString(number, length, 21, 20, \"Si\");\n  }\n  if (length >= 25 && length < 28) {\n    return formatString(number, length, 24, 23, \"Sep\");\n  }\n  if (length >= 28 && length < 31) {\n    return formatString(number, length, 27, 26, \"Oct\");\n  }\n  if (length >= 31 && length < 34) {\n    return formatString(number, length, 30, 29, \"Ni\");\n  }\n  if (length >= 34 && length < 37) {\n    return formatString(number, length, 33, 32, \"Dec\");\n  }\n  if (length >= 37) {\n    return `${number.toString().substring(0, 1)}.${number\n      .toString()\n      .substring(1, 3)}x10e${length}`;\n  }\n  return Math.round(number * 100) / 100;\n};\n\nconst formatString = (number, length, first, second, letter) =>\n  `${number.toString().substring(0, length - first)}.${number\n    .toString()\n    .substring(length - first, length - second)}${letter}`;\n","import React from \"react\";\nimport {\n  Container,\n  StyledFontAwesomeIcon,\n  IconContainer,\n  DescriptionContainer,\n  UpgradeName,\n  UpgradeDescription,\n  UpgradeButtonContainer,\n  UpgradeButton,\n  UpgradeButtonSpan\n} from \"./styledComponents\";\nimport { faCoffee } from \"@fortawesome/free-solid-svg-icons\";\nimport { formatNumbers } from \"../../libs/bigNumbers\";\n\nconst UpgradeCard = ({\n  title,\n  description,\n  price,\n  setLatestUpgradeId,\n  upgradeId,\n  level,\n  isAvailable,\n  nextClickWillRandomize\n}) => (\n  <Container>\n    <IconContainer>\n      <StyledFontAwesomeIcon icon={faCoffee} size=\"lg\" />\n    </IconContainer>\n    <DescriptionContainer>\n      <UpgradeName>\n        {title}\n        {`(${level})`}\n      </UpgradeName>\n      <UpgradeDescription> {description} </UpgradeDescription>\n    </DescriptionContainer>\n    <UpgradeButtonContainer>\n      <UpgradeButton\n        onClick={isAvailable ? () => setLatestUpgradeId(upgradeId) : () => {}}\n        isAvailable={isAvailable}\n      >\n        {nextClickWillRandomize ? (\n          \"Waiting\"\n        ) : (\n          <>\n            <UpgradeButtonSpan>■</UpgradeButtonSpan>\n            {formatNumbers(price)}\n          </>\n        )}\n      </UpgradeButton>\n    </UpgradeButtonContainer>\n  </Container>\n);\n\nexport default UpgradeCard;\n","import styled, { css } from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport const Container = styled.div`\n  border: 0.5px solid #221c34;\n  width: 90%;\n  margin: auto;\n  margin-bottom: 8px;\n  display: flex;\n`;\n\nexport const StyledFontAwesomeIcon = styled(FontAwesomeIcon)``;\n\nexport const IconSection = styled.div`\n  margin: auto;\n  position: relative;\n  padding: 0 16px;\n  height: 100%;\n`;\n\nexport const HidableIconContainer = styled.div`\n  ${props =>\n    !props.isVisible &&\n    css`\n      opacity: 0;\n    `}\n`;\n\nexport const IconContainer = styled.div``;\n\nexport const IconLevel = styled.div`\n  position: absolute;\n  background-color: pink;\n  width: 16px;\n  color: black;\n  font-size: 14px;\n  font-weight: 800;\n  border-bottom: 1px solid black;\n  border-right: 1px solid black;\n`;\n\nexport const DescriptionContainer = styled.div`\n  width: 60%;\n`;\n\nexport const UpgradeName = styled.p`\n  font-size: 12px;\n`;\n\nexport const UpgradeDescription = styled.p`\n  font-size: 10px;\n`;\n\nexport const UpgradeButtonContainer = styled.div`\n  width: 25%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const UpgradeButton = styled.button`\n  border: 2px solid purple;\n  background-color: lightBlue;\n  border-radius: 6px;\n  width: 60px;\n  height: 45px;\n  font-size: 11px;\n  text-align: center;\n  ${({ isAvailable }) =>\n    !isAvailable &&\n    css`\n      background-color: gray;\n    `};\n`;\n\nexport const UpgradeButtonSpan = styled.span`\n  font-size: 16px;\n  padding-right: 2px;\n`;\n","import React from \"react\";\nimport {\n  Container,\n  StyledFontAwesomeIcon,\n  IconContainer,\n  DescriptionContainer,\n  UpgradeName,\n  UpgradeDescription,\n  UpgradeButtonContainer,\n  UpgradeButton,\n  UpgradeButtonSpan,\n  IconSection,\n  IconLevel,\n  HidableIconContainer\n} from \"./styledComponents\";\nimport {\n  faCoffee,\n  faAngleUp,\n  faAngleDown\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { formatNumbers } from \"../../libs/bigNumbers\";\n\nconst RepeatedUpgradeCard = ({\n  title,\n  description,\n  price,\n  setLatestUpgradeId,\n  upgradeId,\n  level,\n  isAvailable,\n  nextClickWillRandomize,\n  upgradeTier,\n  setUpgradeTier = () => {},\n  effectLength,\n  unlockNextTierPrice\n}) => {\n  const isUpVisible =\n    effectLength !== upgradeTier && level >= unlockNextTierPrice;\n  const isDownVisible = upgradeTier !== 1;\n  return (\n    <Container>\n      <IconLevel>{upgradeTier}</IconLevel>\n      <IconSection>\n        <HidableIconContainer isVisible={isUpVisible}>\n          <StyledFontAwesomeIcon\n            icon={faAngleUp}\n            size=\"sm\"\n            onClick={\n              isUpVisible ? () => setUpgradeTier(upgradeId, 1) : () => {}\n            }\n          />\n        </HidableIconContainer>\n        <IconContainer>\n          <StyledFontAwesomeIcon icon={faCoffee} size=\"lg\" />\n        </IconContainer>\n        <HidableIconContainer isVisible={isDownVisible}>\n          <StyledFontAwesomeIcon\n            icon={faAngleDown}\n            size=\"sm\"\n            onClick={\n              isDownVisible ? () => setUpgradeTier(upgradeId, -1) : () => {}\n            }\n          />\n        </HidableIconContainer>\n      </IconSection>\n\n      <DescriptionContainer>\n        <UpgradeName>\n          {title}\n          {`(${level})`}\n        </UpgradeName>\n        <UpgradeDescription> {description} </UpgradeDescription>\n      </DescriptionContainer>\n      <UpgradeButtonContainer>\n        <UpgradeButton\n          onClick={isAvailable ? () => setLatestUpgradeId(upgradeId) : () => {}}\n          isAvailable={isAvailable}\n        >\n          {nextClickWillRandomize ? (\n            \"Waiting\"\n          ) : (\n            <>\n              <UpgradeButtonSpan>■</UpgradeButtonSpan>\n              {formatNumbers(price)}\n            </>\n          )}\n        </UpgradeButton>\n      </UpgradeButtonContainer>\n    </Container>\n  );\n};\n\nexport default RepeatedUpgradeCard;\n","import React from \"react\";\nimport UpgradeCard from \"../upgradeCard\";\nimport RepeatedUpgradeCard from \"../repeatedUpgradeCard\";\n\nconst UpgradeSection = ({\n  counter,\n  upgrades = [],\n  setLatestUpgradeId,\n  upgradeLevels = [],\n  upgradePrices = [],\n  isUpgradeAvailable = [],\n  nextClickWillRandomize = false,\n  upgradeTiers = [],\n  setUpgradeTier\n}) => (\n  <div>\n    <p>Upgrades</p>\n    {upgrades.map((e, i) =>\n      e.unique ? (\n        <UpgradeCard\n          description={e.description}\n          price={upgradePrices[i]}\n          title={e.title}\n          setLatestUpgradeId={setLatestUpgradeId}\n          upgradeId={e.id}\n          level={upgradeLevels[i]}\n          isAvailable={\n            isUpgradeAvailable[i] &&\n            !(e.twoClickUpgrade && nextClickWillRandomize)\n          }\n          nextClickWillRandomize={e.twoClickUpgrade && nextClickWillRandomize}\n        />\n      ) : (\n        <RepeatedUpgradeCard\n          description={e.description[upgradeTiers[i] - 1]}\n          price={upgradePrices[i]}\n          title={e.title[upgradeTiers[i] - 1]}\n          setLatestUpgradeId={setLatestUpgradeId}\n          upgradeId={e.id}\n          level={upgradeLevels[i]}\n          isAvailable={\n            isUpgradeAvailable[i] &&\n            !(e.twoClickUpgrade && nextClickWillRandomize)\n          }\n          effectLength={e.effect.length}\n          unlockNextTierPrice={e.levelTrigger[upgradeTiers[i] - 1]}\n          nextClickWillRandomize={e.twoClickUpgrade && nextClickWillRandomize}\n          upgradeTier={upgradeTiers[i]}\n          setUpgradeTier={setUpgradeTier}\n        />\n      )\n    )}\n  </div>\n);\n\nexport default UpgradeSection;\n","export const UpgradeList = [\n  {\n    title: [\"Click\", \"Super Click\", \"Super Click\", \"Super Click\"],\n    description: [\n      \"Upgrade your basic click amount\",\n      \"Upgrade your super click amount\",\n      \"Upgrade your super click amount\",\n      \"Upgrade your super click amount\"\n    ],\n    basePrice: [1, 100, 1000, 10000],\n    effect: [0.2, 2, 20, 200],\n    levelTrigger: [25, 50, 75],\n    id: 0,\n    twoClickUpgrade: false,\n    unique: false\n  },\n  {\n    title: [\n      \"Random Color\",\n      \"More Random Color\",\n      \"More Random Color\",\n      \"More Random Color\"\n    ],\n    description: [\n      \"Next click will upgrade one of your basic blocks to a random colored passive\",\n      \"Next click will upgrade one of your basic blocks to a random colored passive\",\n      \"Next click will upgrade one of your basic blocks to a random colored passive\",\n      \"Next click will upgrade one of your basic blocks to a random colored passive\"\n    ],\n    basePrice: [150, 3000, 45000, 675000],\n    effect: [1, 10, 100, 1000],\n    levelTrigger: [10, 20, 50],\n    id: 1,\n    twoClickUpgrade: true,\n    unique: false\n  },\n  {\n    title: \"Regen Time\",\n    description: \"Upgrade amount of time regenerating block\",\n    basePrice: 2000,\n    effect: 0.9,\n    id: 2,\n    twoClickUpgrade: false,\n    unique: true\n  }\n];\n","export const updateMultipliers =\n  (\n    simpleClickMultiplier,\n    setSimpleClickMultiplier,\n    passiveIncrementPerSecond,\n    setPassiveIncrementPerSecond,\n    basicRegenTimer,\n    setBasicRegenTimer,\n    upgradeLevels,\n    setUpgradeLevels,\n    counter,\n    setCounter,\n    upgradePrices,\n    setUpgradePrices,\n    passiveCounter,\n    setPassiveCounter,\n    setNextClickWillRandomize,\n    upgradeEffects\n  ) =>\n  upgradeId => {\n    if (counter + passiveCounter >= upgradePrices[upgradeId]) {\n      let wasIncrementPerSecondChanged = false;\n      switch (upgradeId) {\n        case 0:\n          setSimpleClickMultiplier(\n            simpleClickMultiplier + upgradeEffects[upgradeId]\n          );\n          break;\n        case 1:\n          wasIncrementPerSecondChanged = true;\n          setNextClickWillRandomize(true);\n          // setPassiveIncrementPerSecond(passiveIncrementPerSecond + 1);\n          break;\n        case 2:\n          setBasicRegenTimer(basicRegenTimer * upgradeEffects[upgradeId]);\n          break;\n        default:\n          console.log(\"No Upgrade\");\n          break;\n      }\n      if (upgradeLevels[upgradeId] >= 0) {\n        const newUpgradeLevels = [...upgradeLevels];\n        newUpgradeLevels[upgradeId] = newUpgradeLevels[upgradeId] + 1;\n        setUpgradeLevels(newUpgradeLevels);\n        if (passiveCounter > 0) {\n          if (passiveCounter >= upgradePrices[upgradeId]) {\n            setPassiveCounter(\n              passiveCounter -\n                upgradePrices[upgradeId] +\n                (wasIncrementPerSecondChanged ? passiveIncrementPerSecond : 0)\n            );\n          } else {\n            setCounter(\n              counter -\n                (upgradePrices[upgradeId] - passiveCounter) +\n                (wasIncrementPerSecondChanged ? passiveIncrementPerSecond : 0)\n            );\n            setPassiveCounter(0);\n          }\n        } else {\n          setCounter(\n            counter -\n              upgradePrices[upgradeId] +\n              (wasIncrementPerSecondChanged ? passiveIncrementPerSecond : 0)\n          );\n        }\n\n        const newUpgradePrices = [...upgradePrices];\n        newUpgradePrices[upgradeId] =\n          Math.round(newUpgradePrices[upgradeId] * 1.2 * 100) / 100;\n\n        setUpgradePrices(newUpgradePrices);\n      }\n    } else {\n      return;\n    }\n  };\n","export const getRandomColor = () => {\n  var letters = \"0123456789ABCDEF\";\n  var color = \"#\";\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n};\n\nexport const rareBlockGenerator = (colorList, setColorList) => id => {\n  const newColorList = [...colorList];\n  newColorList[id] = getRandomColor();\n  setColorList(newColorList);\n};\n","import { UpgradeList } from \"./upgradeList\";\n\nconst previousTiersMap = {};\n\nexport const updateTier =\n  (\n    upgradePrices,\n    setUpgradePrices,\n    upgradeLevels,\n    setUpgradeLevels,\n    upgradeTiers,\n    setUpgradeTiers,\n    upgradeEffects,\n    setUpgradeEffects\n  ) =>\n  (upgradeId, increment) => {\n    const newUpgradeTiers = [...upgradeTiers];\n    if (newUpgradeTiers[upgradeId] + increment !== 0) {\n      const newUpgradePrices = [...upgradePrices];\n      const newUpgradeLevels = [...upgradeLevels];\n      const newUpgradeEffects = [...upgradeEffects];\n      newUpgradeTiers[upgradeId] += increment;\n      newUpgradeEffects[upgradeId] =\n        UpgradeList[upgradeId].effect[newUpgradeTiers[upgradeId] - 1];\n\n      if (previousTiersMap[upgradeId] === undefined) {\n        // To not break when setting sub-level\n        previousTiersMap[upgradeId] = {};\n      }\n      if (\n        previousTiersMap[upgradeId][newUpgradeTiers[upgradeId]] === undefined\n      ) {\n        newUpgradePrices[upgradeId] =\n          UpgradeList[upgradeId].basePrice[newUpgradeTiers[upgradeId] - 1];\n        newUpgradeLevels[upgradeId] = 0;\n      } else {\n        newUpgradePrices[upgradeId] =\n          previousTiersMap[upgradeId][newUpgradeTiers[upgradeId]].price;\n        newUpgradeLevels[upgradeId] =\n          previousTiersMap[upgradeId][newUpgradeTiers[upgradeId]].levels;\n      }\n      setUpgradeTiers(newUpgradeTiers);\n      setUpgradePrices(newUpgradePrices);\n      setUpgradeLevels(newUpgradeLevels);\n      setUpgradeEffects(newUpgradeEffects);\n      // here\n      previousTiersMap[upgradeId][upgradeTiers[upgradeId]] = {\n        levels: upgradeLevels[upgradeId],\n        price: upgradePrices[upgradeId]\n      };\n    }\n  };\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport BlockGroup from \"../blockGroup/index\";\nimport MainCounters from \"../mainCounters\";\nimport UpgradeSection from \"../upgradeSection\";\nimport { UpgradeList } from \"../../libs/upgradeList\";\nimport { updateMultipliers } from \"../../libs/multipliers\";\nimport { rareBlockGenerator } from \"../../libs/rareBlockGenerator\";\nimport { formatNumbers } from \"../../libs/bigNumbers\";\nimport { updateTier } from \"../../libs/updateTier\";\n\nconst Main = () => {\n  const [counter, setCounter] = useState(0);\n  const [passiveCounter, setPassiveCounter] = useState(0);\n  const [passiveIncrementPerSecond, setPassiveIncrementPerSecond] = useState(0);\n  const [simpleClickMultiplier, setSimpleClickMultiplier] = useState(1);\n  const [nextClickWillRandomize, setNextClickWillRandomize] = useState(false);\n  const [basicRegenTimer, setBasicRegenTimer] = useState(12000);\n  const [upgradeLevels, setUpgradeLevels] = useState(UpgradeList.map(() => 0));\n  const [upgradeTiers, setUpgradeTiers] = useState(UpgradeList.map(() => 1));\n  const [upgradePrices, setUpgradePrices] = useState(\n    UpgradeList.map((e, i) =>\n      UpgradeList[i].unique\n        ? UpgradeList[i].basePrice\n        : UpgradeList[i].basePrice[0]\n    )\n  );\n  const [upgradeEffects, setUpgradeEffects] = useState(\n    UpgradeList.map((e, i) =>\n      UpgradeList[i].unique ? UpgradeList[i].effect : UpgradeList[i].effect[0]\n    )\n  );\n  const [colorList, setColorList] = useState(\n    [...Array(16)].map(() => \"#ffffff\")\n  );\n  const [isUpgradeAvailable, setIsUpgradeAvailable] = useState(\n    UpgradeList.map(() => false)\n  );\n\n  useEffect(() => {\n    if (passiveIncrementPerSecond !== 0) {\n      const interval = setInterval(() => {\n        setPassiveCounter(passiveCounter + passiveIncrementPerSecond);\n      }, 1000);\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [passiveCounter, passiveIncrementPerSecond]);\n\n  useEffect(() => {\n    const isUpgradeAvailableBuffer = [...isUpgradeAvailable];\n    for (let i = 0; i < UpgradeList.length; i++) {\n      isUpgradeAvailableBuffer[i] =\n        upgradePrices[i] <= counter + passiveCounter;\n    }\n    setIsUpgradeAvailable(isUpgradeAvailableBuffer);\n  }, [counter, passiveCounter, upgradePrices]);\n\n  const simpleClick = useCallback(\n    (index, setColor) => {\n      setCounter(1 * simpleClickMultiplier + counter);\n      if (nextClickWillRandomize) {\n        setPassiveIncrementPerSecond(\n          passiveIncrementPerSecond + upgradeEffects[1]\n        );\n        setNextClickWillRandomize(false);\n        setColor(index);\n      }\n    },\n    [\n      counter,\n      simpleClickMultiplier,\n      nextClickWillRandomize,\n      passiveIncrementPerSecond,\n      upgradeEffects\n    ]\n  );\n\n  return (\n    <>\n      <MainCounters balance={formatNumbers(counter + passiveCounter)} />\n      <BlockGroup\n        simpleBlockClick={simpleClick}\n        basicRegenTimer={basicRegenTimer}\n        colorList={colorList}\n        setColorList={rareBlockGenerator(colorList, setColorList)}\n      />\n      <UpgradeSection\n        upgrades={UpgradeList}\n        upgradeLevels={upgradeLevels}\n        upgradePrices={upgradePrices}\n        isUpgradeAvailable={isUpgradeAvailable}\n        nextClickWillRandomize={nextClickWillRandomize}\n        upgradeTiers={upgradeTiers}\n        setLatestUpgradeId={updateMultipliers(\n          simpleClickMultiplier,\n          setSimpleClickMultiplier,\n          passiveIncrementPerSecond,\n          setPassiveIncrementPerSecond,\n          basicRegenTimer,\n          setBasicRegenTimer,\n          upgradeLevels,\n          setUpgradeLevels,\n          counter,\n          setCounter,\n          upgradePrices,\n          setUpgradePrices,\n          passiveCounter,\n          setPassiveCounter,\n          setNextClickWillRandomize,\n          upgradeEffects\n        )}\n        setUpgradeTier={updateTier(\n          upgradePrices,\n          setUpgradePrices,\n          upgradeLevels,\n          setUpgradeLevels,\n          upgradeTiers,\n          setUpgradeTiers,\n          upgradeEffects,\n          setUpgradeEffects\n        )}\n      />\n    </>\n  );\n};\n\nexport default Main;\n","import \"./App.css\";\nimport Header from \"./components/header/index\";\nimport Main from \"./components/main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}